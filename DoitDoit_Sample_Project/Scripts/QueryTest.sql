-- EMP 테이블 생성
CREATE TABLE "EMP" (
	"EMP_ID"	NUMBER		NOT NULL,
	"EMP_PASSWORD"	VARCHAR2(100)		NOT NULL,
	"EMP_NAME"	VARCHAR2(20)		NOT NULL,
	"RANK_NO"	CHAR(2)		NULL,
	"DEPT_NO"	CHAR(2)		NULL,
	"STATE_NO"	CHAR(2) DEFAULT '01' NOT NULL,
	"EMP_ADDRESS"	VARCHAR2(50)		NOT NULL,
	"EMP_PHONE"	VARCHAR2(15)		NULL,
	"EMP_AUTH"	VARCHAR2(20)	DEFAULT 'ROLE_USER'	NOT NULL,
	"EMP_EMAIL"	VARCHAR2(50)		NOT NULL,
	"EMP_NFC"	NUMBER		NOT NULL,
	"EMP_REGDATE"	DATE DEFAULT SYSDATE NOT NULL
);

-- EMP 테이블 삭제
DROP TABLE EMP;

SELECT * FROM EMP;

-- EMP 테이블 컬럼 코멘트
COMMENT ON COLUMN "EMP"."EMP_ID" IS '사원번호 - 입사년월일 + 시퀀스(1~99)
EX)2022051801';
COMMENT ON COLUMN "EMP"."EMP_PASSWORD" IS '비밀번호';
COMMENT ON COLUMN "EMP"."EMP_NAME" IS '사원 이름';
COMMENT ON COLUMN "EMP"."RANK_NO" IS '직급 번호';
COMMENT ON COLUMN "EMP"."DEPT_NO" IS '부서번호';
COMMENT ON COLUMN "EMP"."STATE_NO" IS '재직/휴직/퇴사';
COMMENT ON COLUMN "EMP"."EMP_ADDRESS" IS '자택 주소';
COMMENT ON COLUMN "EMP"."EMP_PHONE" IS '휴대폰 번호';
COMMENT ON COLUMN "EMP"."EMP_AUTH" IS '권한(일반사용자/인사관리자/시스템관리자)';
COMMENT ON COLUMN "EMP"."EMP_EMAIL" IS '메일 주소';
COMMENT ON COLUMN "EMP"."EMP_NFC" IS 'NFC 번호';
COMMENT ON COLUMN "EMP"."EMP_REGDATE" IS '입사일';

-- DEPT 테이블 생성
CREATE TABLE "DEPT" (
	"DEPT_NO"	CHAR(2)		NULL,
	"DEPT_NAME"	VARCHAR2(20)		NULL
);

-- DEPT 테이블 컬럼 코멘트
COMMENT ON COLUMN "DEPT"."DEPT_NO" IS '부서 구분
01 - 인사부 
02 - 관리부
03 - 개발부
04 - 영업부';
COMMENT ON COLUMN "DEPT"."DEPT_NAME" IS '부서명';

-- RANK 테이블 생성
CREATE TABLE "RANK" (
	"RANK_NO"	CHAR(2)		NULL,
	"RANK_NAME"	VARCHAR2(10)		NULL
);

-- RANK 테이블 컬럼 코멘트
COMMENT ON COLUMN "RANK"."RANK_NO" IS '01 - 사원
02 - 대리
03 - 과장
04 - 차장
05 - 부장
06 - 대표';
COMMENT ON COLUMN "RANK"."RANK_NAME" IS '사원/대리/과장/차장/부장/대표';

-- STATE 테이블 생성
CREATE TABLE "STATE" (
	"STATE_NO"	CHAR(2)		NOT NULL,
	"STATE_NAME"	VARCHAR(10)		NOT NULL
);

-- STATE 테이블 컬럼 코멘트
COMMENT ON COLUMN "STATE"."STATE_NO" IS '재직 상태 구분
01 - 재직
02 - 휴직
03 - 퇴사';
COMMENT ON COLUMN "STATE"."STATE_NAME" IS '재직/휴직/퇴사';

-- PK 생성
ALTER TABLE "EMP" ADD CONSTRAINT "PK_EMP" PRIMARY KEY (
	"EMP_ID"
);
ALTER TABLE "DEPT" ADD CONSTRAINT "PK_DEPT" PRIMARY KEY (
	"DEPT_NO"
);
ALTER TABLE "RANK" ADD CONSTRAINT "PK_RANK" PRIMARY KEY (
	"RANK_NO"
);
ALTER TABLE "STATE" ADD CONSTRAINT "PK_STATE" PRIMARY KEY (
	"STATE_NO"
);

-- FK 생성
ALTER TABLE "EMP" ADD CONSTRAINT "FK_RANK_TO_EMP_1" FOREIGN KEY (
	"RANK_NO"
)
REFERENCES "RANK" (
	"RANK_NO"
);
ALTER TABLE "EMP" ADD CONSTRAINT "FK_DEPT_TO_EMP_1" FOREIGN KEY (
	"DEPT_NO"
)
REFERENCES "DEPT" (
	"DEPT_NO"
);
ALTER TABLE "EMP" ADD CONSTRAINT "FK_STATE_TO_EMP_1" FOREIGN KEY (
	"STATE_NO"
)
REFERENCES "STATE" (
	"STATE_NO"
);

-- EMP_SEQ 생성 (1~99)
CREATE SEQUENCE EMP_SEQ INCREMENT BY 1 START WITH 1 MAXVALUE 99 CYCLE;

-- EMP_SEQ 삭제
DROP SEQUENCE EMP_SEQ;

-- 부서 테이블 기본값 입력
INSERT INTO DEPT
(DEPT_NO, DEPT_NAME)
VALUES('01', '인사부');
INSERT INTO DEPT
(DEPT_NO, DEPT_NAME)
VALUES('02', '관리부');
INSERT INTO DEPT
(DEPT_NO, DEPT_NAME)
VALUES('03', '개발부');
INSERT INTO DEPT
(DEPT_NO, DEPT_NAME)
VALUES('04', '영업부');

-- 직급 테이블 기본값 입력
INSERT INTO "RANK"
(RANK_NO, RANK_NAME)
VALUES('01', '사원');
INSERT INTO "RANK"
(RANK_NO, RANK_NAME)
VALUES('02', '대리');
INSERT INTO "RANK"
(RANK_NO, RANK_NAME)
VALUES('03', '과장');
INSERT INTO "RANK"
(RANK_NO, RANK_NAME)
VALUES('04', '차장');
INSERT INTO "RANK"
(RANK_NO, RANK_NAME)
VALUES('05', '부장');
INSERT INTO "RANK"
(RANK_NO, RANK_NAME)
VALUES('06', '대표');

-- 상태 테이블 기본값 입력
INSERT INTO STATE
(STATE_NO, STATE_NAME)
VALUES('01', '재직');
INSERT INTO STATE
(STATE_NO, STATE_NAME)
VALUES('02', '휴직');
INSERT INTO STATE
(STATE_NO, STATE_NAME)
VALUES('03', '퇴사');

-- ==================== QUERY TEST =======================
-- 회원전체조회(사번, 이름, 부서, 직급)
SELECT EMP_ID, EMP_NAME, 
		CASE DEPT_NO WHEN '01' THEN '인사부'
			 WHEN '02' THEN '관리부'
			 WHEN '03' THEN '개발부'
			 WHEN '04' THEN '영업부' END AS DEPT, 
		CASE RANK_NO WHEN '01' THEN '사원'
             WHEN '02' THEN '대리'
             WHEN '03' THEN '과장'
             WHEN '04' THEN '차장'
             WHEN '05' THEN '부장'
             WHEN '06' THEN '대표' END AS "RANK"
	FROM EMP;

-- 회원상세조회(사번, 이름, 이메일, 부서, 직급, 입사일, 메일주소, NFC번호)
SELECT EMP_ID, EMP_NAME, EMP_EMAIL,
		CASE DEPT_NO WHEN '01' THEN '인사부'
			 WHEN '02' THEN '관리부'
			 WHEN '03' THEN '개발부'
			 WHEN '04' THEN '영업부' END AS DEPT_NO, 
		CASE RANK_NO WHEN '01' THEN '사원'
             WHEN '02' THEN '대리'
             WHEN '03' THEN '과장'
             WHEN '04' THEN '차장'
             WHEN '05' THEN '부장'
             WHEN '06' THEN '대표' END AS RANK_NO,
        TO_CHAR(EMP_REGDATE,'YYYY-MM-DD') AS EMP_REGDATE, EMP_ADDRESS, EMP_NFC
	FROM EMP WHERE EMP_ID = '2022052001';

-- 회원등록(더미 테이블)
-- 김민진, 김우연, 오지혜 : ROLE_ADMIN_BOARD(게시판 관리자)
-- 유준상, 이정민, 최환희 : ROLE_ADMIN_INSA(인사 관리자)
-- 나머지 ROLE_USER
INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
DEPT_NO, RANK_NO, EMP_ADDRESS, 
EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '김민진', 'minjin@naver.com', 
'04', '02', '서울시 가산동', 
'2537606560'
);

SELECT * FROM EMP;

INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
DEPT_NO, RANK_NO, EMP_ADDRESS, 
EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '김우연', 'wooyeon@naver.com', 
'03', '01', '서울시 신림동', 
'2537606561'
);

INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
DEPT_NO, RANK_NO, EMP_ADDRESS, 
EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '오지혜', 'jihye@naver.com', 
'02', '04', '경기도 일산', 
'2537606562'
);

INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
DEPT_NO, RANK_NO, EMP_ADDRESS, 
EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '유준상', 'junsang@naver.com', 
'03', '01', '서울시 양천구', 
'2537606563'
);

INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
DEPT_NO, RANK_NO, EMP_ADDRESS, 
EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '이정민', 'junmin@naver.com', 
'03', '02', '서울시 구로구', 
'2537606564'
);

INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
RANK_NO, EMP_ADDRESS, EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '최환희', 'hwanhee@naver.com', 
'06', '서울시 영등포구', '2537606565'
);

INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
RANK_NO,DEPT_NO, EMP_ADDRESS, EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '김광연', 'hwanhee@naver.com', 
'06', '01', '서울시', '2537606566'
);

INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
RANK_NO,DEPT_NO, EMP_ADDRESS, EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '김규철', 'user1@naver.com', 
'06', '01', '서울시', '2537606567'
);

INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
RANK_NO, DEPT_NO, EMP_ADDRESS, EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '김휘웅', 'user3@naver.com', 
'06', '01', '서울시', '2537606568'
);

INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
RANK_NO, DEPT_NO, EMP_ADDRESS, EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '전민균', 'user4@naver.com', 
'06', '01', '김포시', '2537606568'
);

INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
RANK_NO, DEPT_NO, EMP_ADDRESS, EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '이인환', 'user5@naver.com', 
'06', '01', '서울시', '2537606569'
);

INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
RANK_NO, DEPT_NO, EMP_ADDRESS, EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '조현진', 'user6@naver.com', 
'06', '01', '서울시', '2537606570'
);

INSERT INTO EMP(
EMP_ID, 
EMP_PASSWORD, EMP_NAME,EMP_EMAIL,
RANK_NO, DEPT_NO, EMP_ADDRESS, EMP_NFC
)
VALUES(
TO_CHAR(SYSDATE,'YYYYMMDD')||
CASE WHEN EMP_SEQ.NEXTVAL <10 THEN '0'||EMP_SEQ.NEXTVAL
ELSE ''||EMP_SEQ.NEXTVAL END ,
'@'||TO_CHAR(SYSDATE,'YYYYMMDD'), '유연석', 'user7@naver.com', 
'06','01','서울시', '2537606571'
);

-- 최초 로그인 시, 비밀번호/휴대폰 번호 업데이트
UPDATE EMP SET EMP_PASSWORD = 'CHANGE', EMP_PHONE = '010-0000-0000' WHERE EMP_ID = '2022052004';

-- <관리자> 비밀번호 초기화
UPDATE EMP SET EMP_PASSWORD = '@'||TO_CHAR(SYSDATE,'YYYYMMDD'), EMP_PHONE = NULL WHERE EMP_ID = '2022052004';
SELECT EMP_NAME, EMP_PASSWORD, EMP_PHONE, EMP_ID FROM EMP;

-- 회원정보수정 (메일주소, 부서, 직급, 상태, 자택주소, NFC)
UPDATE EMP SET EMP_EMAIL = 'EMAIL', DEPT_NO = '99', RANK_NO = '99', EMP_ADDRESS = 'ADDRESS', EMP_NFC = 'NFC' WHERE EMP_ID = '2022052004';

-- 로그인
-- 일단 아이디와 비밀번호 맞으면 EMP 전체 정보 세션에 담고 추후 Spring Security 적용 예정
SELECT * FROM EMP WHERE EMP_ID = '2022052004' AND EMP_PASSWORD = '@20220520';

SELECT * FROM EMP;

SELECT EMP_NAME, EMP_NFC FROM EMP ORDER BY EMP_NFC;

SELECT EMP_ID, EMP_NAME, 
		CASE DEPT_NO WHEN '01' THEN '인사부'
			 WHEN '02' THEN '관리부'
			 WHEN '03' THEN '개발부'
			 WHEN '04' THEN '영업부' END, 
		CASE RANK_NO WHEN '01' THEN '사원'
             WHEN '02' THEN '대리'
             WHEN '03' THEN '과장'
             WHEN '04' THEN '차장'
             WHEN '05' THEN '부장'
             WHEN '06' THEN '대표' END
		FROM EMP;
		
SELECT * FROM EMP;

INSERT INTO SIGN (
SIGN_NO, EMP_ID, SIGN_REGDATE, 
SIGN_NAME, SIGN_IMG)
VALUES
(18, 2022052001, SYSDATE , 
(SELECT SIGN_NAME FROM SIGN WHERE EMP_ID = 2022052001 ), 
(SELECT SIGN_IMG FROM SIGN s WHERE EMP_ID = 2022052001));
